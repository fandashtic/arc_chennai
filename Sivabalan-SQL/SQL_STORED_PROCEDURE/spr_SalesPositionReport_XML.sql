Create Procedure spr_SalesPositionReport_XML(
@MANUFACTURER nvarchar(255),
@FromDate DateTime,
@ToDate DateTime
)
As  
--$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$--
--$ Log Information [This procedure used while sending SPR Report                  $$--
--$ [Diff with dbo.spr_SalesPositionReport.prc Procedure which is use in Report    $$--
--$ 1. This can generated by 'System SKU'.
--$ 2. SKU and Active colums added for XML Generation.
--$ 3. Filtered By InActive and Sales , D&D are Zero.
--$ 4. SKU parameter removed and All 'Market SKU' Validation also Removed.  
--$ 5. The Received Reports are consolidated which are in System SKU Format.
--$ 6. The Market SKU Format Not consolidated.
--$ 7. New Columns [SystemSKUName] and [MarketSKUName] are added after Active column 
--$ 8. Active Will be shown zero if either Sales or adjustments (D & D) are done for inactive item. 
--		 And condition is replaced with OR Condition for showing inactive item atlast.  
--$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$--
Declare @WDCode nVarchar(255)
Declare @WDDest nVarchar(255)
Declare @NEXT_DATE DateTime
Declare @CORRECTED_DATE DateTime
Declare @CompaniesToUploadCode nVarchar(255)
Declare @HName nVarchar(255)
Declare @LevelID int
Declare @SoldAs Int
Declare @SPRExist Int --For Consolidation
Declare @MSKU nVarchar(50)
Declare @SUBTOTAL nVarchar(50)
Declare @GRNTOTAL nVarchar(50)
Declare @Inc Int    
Declare @Count Int    
Declare @CategoryID Int  
Declare @CategoryName nVarChar(255)  
Declare @BrchID nVarchar(255)
Declare @Quantity Decimal(18,6)    
Declare @Query nVarchar(4000)    
Declare @TabID Int
Declare @ConDynCol nVarchar(2000)
Declare @SqlQuery nVarchar(4000)
Declare @Delimeter as Char(1)    


Declare @CummulativeDATE Datetime
Set @CummulativeDATE = @FromDate
Select @CummulativeDATE = Convert(DateTime, '01/' +  Cast(Month(@CummulativeDATE) as nVarchar) + '/' + Cast(Year(@CummulativeDATE) as nVarchar) , 103)


Set @Delimeter=Char(15)    
  
Create Table #TempCategory (CategoryID Int, Status Int)

Create Table #TmpMfr (Mfr nVarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS)
  
If @MANUFACTURER = '%'
 Insert Into #TmpMfr Select Manufacturer_Name From Manufacturer  
Else  
 Insert Into #TmpMfr Select * From DBO.sp_SplitIn2Rows(@MANUFACTURER,@Delimeter)  
  
Set @MSKU = dbo.LookupDictionaryItem(N'MarketSKU', Default)
Set @SUBTOTAL = dbo.LookupDictionaryItem(N'SubTotal:', Default)
Set @GRNTOTAL = dbo.LookupDictionaryItem(N'GrandTotal:', Default)

Select Top 1 @CompaniesToUploadCode=ForumCode From Companies_To_Upload  
Select Top 1 @WDCode = RegisteredOwner From Setup    
  
If @CompaniesToUploadCode='ITC001'  
 Set @WDDest= @WDCode  
Else  
Begin  
 Set @WDDest= @WDCode  
 Set @WDCode= @CompaniesToUploadCode  
End  


Create table #tmpwdChannel( WDIDs int)
Create table #tmpCustomerIDs (CustomerID nVarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS)
Insert Into #tmpwdChannel
Select IsNull(ID,0) From tbl_merp_Olclass where channel_type_desc  = 'WD'

Insert Into #tmpCustomerIDs
Select CustomerID From tbl_merp_Olclassmapping where OlclassID in ( Select Distinct WDIDs from #tmpwdChannel)
and Active  = 1


Create Table #TempConsolidate(
CategoryID NVarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS,
WDCode NVarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS,
WDDest NVarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS,
FromDate datetime,
ToDate datetime,
MarketSKU nVarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS,
[Opl. SOH] Decimal(18, 6),
[Receipts + TRIN] Decimal(18, 6),
[PurchaseITC] Decimal(18, 6),
[TransferIN] Decimal(18, 6),
[TransferOut] Decimal(18, 6),
Sales Decimal(18, 6),
[D&D] Decimal(18, 6),
[NetAdj.] Decimal(18, 6),
[NetSale(WD_Channel)] Decimal(18, 6),
[Cl. SOH] Decimal(18, 6),
[MTD_Sales] Decimal(18, 6),
[SKU] nVarchar(255)  COLLATE SQL_Latin1_General_CP1_CI_AS,
[Active] int,
SystemSKUName nVarChar(255) COLLATE SQL_Latin1_General_CP1_CI_AS,
MarketSKUName nVarChar(255) COLLATE SQL_Latin1_General_CP1_CI_AS,
GodownDandD Decimal(18, 6)
)

Create Table #TempTROUT(
IDS Int IDENTITY(1, 1),
CategoryID NVarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS,
WDCode NVarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS,  
WDDest NVarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS,
CategoryName nVarChar(255) COLLATE SQL_Latin1_General_CP1_CI_AS,    
BrchID nVarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS,
Quantity Decimal(18, 6)
)

Create Table #TempExistColumn(ColumnName NVarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS)

SET @CORRECTED_DATE = CAST(DATEPART(dd, @TODATE) AS varchar) + '/'               
+ CAST(DATEPART(mm, @TODATE) as varchar) + '/'               
+ cast(DATEPART(yyyy, @TODATE) AS varchar)              

SET  @NEXT_DATE = CAST(DATEPART(dd, GETDATE()) AS varchar) + '/'               
+ CAST(DATEPART(mm, GETDATE()) as varchar) + '/'               
+ cast(DATEPART(yyyy, GETDATE()) AS varchar)  

Set @ConDynCol = ''    
Set @SqlQuery = ''
--For ITC we show item as Market SKU on 4th level category
Select @LevelID=Count(*) From ItemHierarchy
If @LevelID<>4 
GOTO EndProc

Set @LevelID=4
SELECT @HName=HierarchyName From ItemHierarchy Where HierarchyID = @LevelID
  
Exec GetLeafCategories @HName, '%'
--The below code is added specially for ITC..
--It's indented to add 4th level categories into #TempCategory table
Insert into #tempCategory 
Select CategoryID, 0 From ItemCategories Where [Level] in (@LevelID)
-----	    
--Manufacturer filter added
Select #tempCategory.CategoryID,Status into #tempCategory1 
from #tempCategory,Items,manufacturer 
Where #tempCategory.CategoryID=Items.CategoryID 
And Items.ManufacturerID=manufacturer.ManufacturerID
And Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)

Insert InTo #TempConsolidate
(CategoryID, WDCode, WDDest, FromDate, ToDate, MarketSKU, [Opl. SOH], [Receipts + TRIN], [PurchaseITC], [TransferIN], [TransferOut], Sales, [D&D], 
[NetAdj.], [NetSale(WD_Channel)], [Cl. SOH], [MTD_Sales], [SKU], [Active], [SystemSKUName], [MarketSKUName],[GodownDandD])
Select 
"Category ID"= itc.CategoryID,
"WD Code"=@WDCode,"WD Dest"=@WDDest, "FromDate" = @fromDate, "ToDate" = @todate,
"Market SKU" = I.Product_Code,
"Opl. SOH" =
IsNull((Select Sum(IsNull(Opening_Quantity,0)) From OpeningDetails, Items, Manufacturer 
Where Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)
And Items.ManufacturerID=Manufacturer.ManufacturerID 
And OpeningDetails.Product_Code = Items.Product_Code 
And Items.Product_Code = I.Product_Code
And Items.CategoryID = itc.CategoryID And Opening_Date = @FromDate), 0) -  

IsNull((Select Sum(IsNull(Damage_Opening_Quantity,0)) 
From OpeningDetails, Items, Manufacturer 
Where Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)
And Items.ManufacturerID=Manufacturer.ManufacturerID 
And OpeningDetails.Product_Code = Items.Product_Code 
And Items.Product_Code = I.Product_Code
And Items.CategoryID = itc.CategoryID And Opening_Date = @FromDate), 0),
  
"Receipts + TRIN" =     
--Putchase  
ISNULL((SELECT SUM((QuantityReceived - QuantityRejected) + FreeQty)    
FROM GRNAbstract, GRNDetail, Items, Manufacturer     
WHERE GRNAbstract.GRNDate BETWEEN @FROMDATE AND @TODATE 
AND (GRNAbstract.GRNStatus & 64) = 0 And (GRNAbstract.GRNStatus & 32) = 0 
AND GRNAbstract.GRNID = GRNDetail.GRNID 
AND GRNDetail.Product_Code = Items.Product_Code 
And Items.Product_Code = I.Product_Code
AND Items.CategoryID = itc.CategoryID 
AND Manufacturer.Manufacturer_Name in
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)
And Items.ManufacturerID=Manufacturer.ManufacturerID),0) + 
--TRIN  
IsNull((Select Sum(Quantity)     
From StockTransferInAbstract, StockTransferInDetail, Items, Manufacturer             
Where StockTransferInAbstract.DocumentDate Between @FromDate And @ToDate 
And StockTransferInAbstract.Status & 192 = 0              
And StockTransferInAbstract.DocSerial = StockTransferInDetail.DocSerial              
And StockTransferInDetail.Product_Code = Items.Product_Code     
And Items.Product_Code = I.Product_Code
And Items.CategoryID = itc.CategoryID
And Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)
And Items.ManufacturerID=Manufacturer.ManufacturerID),0) -
--Purchase Return  
IsNull((Select Sum(Quantity)     
From AdjustmentReturnAbstract, AdjustmentReturnDetail, Items, Manufacturer              
Where AdjustmentReturnAbstract.AdjustmentDate Between @FromDate And @ToDate               
And IsNull(AdjustmentReturnAbstract.Status,0) & 192 = 0              
And AdjustmentReturnAbstract.AdjustmentID = AdjustmentReturnDetail.AdjustmentID              
And AdjustmentReturnDetail.Product_Code = Items.Product_Code     
And Items.Product_Code = I.Product_Code
And Items.CategoryID = itc.CategoryID
And Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)
And Items.ManufacturerID=Manufacturer.ManufacturerID),0),

"PurchaseITC" = --Purchase  
ISNULL((SELECT SUM((QuantityReceived - QuantityRejected) + FreeQty)    
FROM GRNAbstract, GRNDetail, Items, Manufacturer     
WHERE GRNAbstract.GRNDate BETWEEN @FROMDATE AND @TODATE 
AND (GRNAbstract.GRNStatus & 64) = 0 And (GRNAbstract.GRNStatus & 32) = 0 
AND GRNAbstract.GRNID = GRNDetail.GRNID 
And GRNAbstract.VendorID in ('ITC001')
AND GRNDetail.Product_Code = Items.Product_Code 
And Items.Product_Code = I.Product_Code
AND Items.CategoryID = itc.CategoryID 
AND Manufacturer.Manufacturer_Name in
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)
And Items.ManufacturerID=Manufacturer.ManufacturerID),0) -
--Purchase Return  
IsNull((Select Sum(Quantity)     
From AdjustmentReturnAbstract, AdjustmentReturnDetail, Items, Manufacturer              
Where AdjustmentReturnAbstract.AdjustmentDate Between @FromDate And @ToDate               
And IsNull(AdjustmentReturnAbstract.Status,0) & 192 = 0              
And AdjustmentReturnAbstract.AdjustmentID = AdjustmentReturnDetail.AdjustmentID              
And AdjustmentReturnDetail.Product_Code = Items.Product_Code     
And Items.Product_Code = I.Product_Code
And Items.CategoryID = itc.CategoryID
And Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)
And Items.ManufacturerID=Manufacturer.ManufacturerID),0),

"TransferIN" = 
IsNull((Select Sum(Quantity)     
From StockTransferInAbstract, StockTransferInDetail, Items, Manufacturer             
Where StockTransferInAbstract.DocumentDate Between @FromDate And @ToDate 
And StockTransferInAbstract.Status & 192 = 0              
And StockTransferInAbstract.DocSerial = StockTransferInDetail.DocSerial              
And StockTransferInDetail.Product_Code = Items.Product_Code     
And Items.Product_Code = I.Product_Code
And Items.CategoryID = itc.CategoryID
And Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)
And Items.ManufacturerID=Manufacturer.ManufacturerID),0),

--Transferout
0,
  
"Sales" = 
--Sales
ISNULL((SELECT SUM(Case When Quantity>0 Then Quantity Else 0 End) 
FROM InvoiceDetail, InvoiceAbstract, Items, Manufacturer
WHERE InvoiceAbstract.InvoiceDate BETWEEN @FROMDATE AND @TODATE
AND (InvoiceAbstract.Status & 128) = 0 AND (InvoiceAbstract.InvoiceType = 2) 
AND InvoiceAbstract.InvoiceID = InvoiceDetail.InvoiceID               
AND InvoiceDetail.Product_Code = Items.Product_Code 
And Items.Product_Code = I.Product_Code
AND Items.CategoryID = itc.CategoryID     
AND Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)
AND Items.ManufacturerID=Manufacturer.ManufacturerID),0) + 
ISNULL((SELECT SUM(Quantity)               
FROM DispatchDetail, DispatchAbstract, Items, Manufacturer      
WHERE DispatchAbstract.DispatchDate BETWEEN @FROMDATE AND @TODATE 
AND Isnull(DispatchAbstract.Status, 0) & 64 = 0            
AND Isnull(DispatchAbstract.Status, 0) & 384 <> 384 
AND DispatchAbstract.DispatchID = DispatchDetail.DispatchID                
AND DispatchDetail.Product_Code = Items.Product_Code     
And Items.Product_Code = I.Product_Code
And Items.CategoryID = itc.CategoryID    
AND Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)
AND Items.ManufacturerID=Manufacturer.ManufacturerID),0) - 
--Sales Return  (Trade Invoice Sales Return  + Retail Invoice Sales Return )
--Trade Invoice Sales Return  
(ISNULL((SELECT SUM(Quantity) FROM InvoiceDetail, InvoiceAbstract, Items, Manufacturer     
WHERE InvoiceAbstract.InvoiceDate BETWEEN @FROMDATE AND @TODATE
AND (InvoiceAbstract.InvoiceType = 4)               
AND (InvoiceAbstract.Status & 128) = 0               
AND (InvoiceAbstract.Status & 32) = 0              
AND InvoiceAbstract.InvoiceID = InvoiceDetail.InvoiceID               
AND InvoiceDetail.Product_Code = Items.Product_Code     
And Items.Product_Code = I.Product_Code
And Items.CategoryID = itc.CategoryID    
AND Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)  
AND Items.ManufacturerID=Manufacturer.ManufacturerID),0) + 
--Retail Invoice Sales Return  
ISNULL((SELECT SUM(Case When Quantity<0 Then Abs(Quantity) Else 0 End) 
FROM InvoiceDetail, InvoiceAbstract, Items, Manufacturer     
WHERE InvoiceAbstract.InvoiceDate BETWEEN @FROMDATE AND @TODATE
AND (InvoiceAbstract.InvoiceType = 2)               
AND (InvoiceAbstract.Status & 128) = 0               
AND InvoiceAbstract.InvoiceID = InvoiceDetail.InvoiceID     
AND InvoiceDetail.Product_Code = Items.Product_Code     
And Items.Product_Code = I.Product_Code
And Items.CategoryID = itc.CategoryID     
AND Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)  
AND Items.ManufacturerID=Manufacturer.ManufacturerID),0)),
    
"D&D" = 
ISNULL((SELECT SUM(Quantity) FROM InvoiceDetail, InvoiceAbstract, Items, Manufacturer       
WHERE InvoiceAbstract.InvoiceDate BETWEEN @FROMDATE AND @TODATE
AND (InvoiceAbstract.InvoiceType = 4)               
AND (InvoiceAbstract.Status & 128) = 0               
AND (InvoiceAbstract.Status & 32) <> 0              
AND InvoiceAbstract.InvoiceID = InvoiceDetail.InvoiceID               
AND InvoiceDetail.Product_Code = Items.Product_Code     
And Items.Product_Code = I.Product_Code
And Items.CategoryID = itc.CategoryID    
AND Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)
AND Items.ManufacturerID=Manufacturer.ManufacturerID),0) + 

ISNULL((SELECT SUM(Quantity) 
FROM StockAdjustmentAbstract, StockAdjustment, Items, Manufacturer
WHERE StockAdjustmentAbstract.AdjustmentDate BETWEEN @FROMDATE AND @TODATE
AND (StockAdjustmentAbstract.AdjustmentType = 0)               
AND StockAdjustmentAbstract.AdjustmentID = StockAdjustment.SerialNo  
AND StockAdjustment.Product_Code = Items.Product_Code     
And Items.Product_Code = I.Product_Code
And Items.CategoryID = itc.CategoryID    
AND Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)  
AND Items.ManufacturerID=Manufacturer.ManufacturerID),0) ,  


--NetAdj.
"NetAdj." = Cast(ISNULL((SELECT SUM(StockAdjustment.Quantity - StockAdjustment.OldQty) FROM StockAdjustment, StockAdjustmentAbstract, Items, Manufacturer
				, Batch_Products
				WHERE AdjustmentDate BETWEEN @FROMDATE AND @TODATE And
				ISNULL(AdjustmentType,0) in (1, 3)  
				AND StockAdjustment.SerialNo = StockAdjustmentAbstract.AdjustmentID
				AND StockAdjustment.Product_Code = Items.Product_Code     
				And Items.Product_Code = I.Product_Code
				And Items.CategoryID = itc.CategoryID    
				And StockAdjustment.Product_Code = Batch_Products.Product_Code
				And StockAdjustment.Batch_Code = Batch_Products.Batch_Code
				And IsNull(Batch_Products.Damage,0) <> 2  
				AND Manufacturer.Manufacturer_Name in 
				(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)  
				AND Items.ManufacturerID=Manufacturer.ManufacturerID),0) as Decimal(18,6))
			 -
				Cast(ISNULL((SELECT SUM(Quantity) FROM StockAdjustment, StockAdjustmentAbstract, Items, Manufacturer 
				WHERE AdjustmentDate BETWEEN @FROMDATE AND @TODATE And
				ISNULL(AdjustmentType,0) in (0) 
				AND StockAdjustment.SerialNo = StockAdjustmentAbstract.AdjustmentID
				AND StockAdjustment.Product_Code = Items.Product_Code     
				And Items.Product_Code = I.Product_Code
				And Items.CategoryID = itc.CategoryID    
				AND Manufacturer.Manufacturer_Name in 
				(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)  
				AND Items.ManufacturerID=Manufacturer.ManufacturerID),0) as Decimal(18,6)),

--NetSale(WD_Channel)
"Net Sale (WD Channel)" = 
ISNULL((SELECT SUM(Case When Quantity>0 Then Quantity Else 0 End) 
FROM InvoiceDetail, InvoiceAbstract, Items, Manufacturer
WHERE InvoiceAbstract.InvoiceDate BETWEEN @FROMDATE AND @TODATE
AND (InvoiceAbstract.Status & 128) = 0 AND (InvoiceAbstract.InvoiceType = 2) 
AND InvoiceAbstract.InvoiceID = InvoiceDetail.InvoiceID               
AND InvoiceDetail.Product_Code = Items.Product_Code 
And Items.Product_Code = I.Product_Code
AND Items.CategoryID = itc.CategoryID     
And InvoiceAbstract.CustomerID in (Select CustomerID from #tmpCustomerIDs)
AND Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)
AND Items.ManufacturerID=Manufacturer.ManufacturerID),0) + 

IsNull((Select SUM(Quantity)               
FROM DispatchDetail, DispatchAbstract, Items, Manufacturer      
WHERE DispatchAbstract.DispatchDate BETWEEN @FROMDATE AND @TODATE 
AND Isnull(DispatchAbstract.Status, 0) & 64 = 0            
AND Isnull(DispatchAbstract.Status, 0) & 384 <> 384 
AND DispatchAbstract.DispatchID = DispatchDetail.DispatchID                
AND DispatchDetail.Product_Code = Items.Product_Code     
And Items.Product_Code = I.Product_Code
And Items.CategoryID = itc.CategoryID    
AND Items.ManufacturerID=Manufacturer.ManufacturerID
AND Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)
And DispatchAbstract.CustomerID in (Select CustomerID from #tmpCustomerIDs)),0) - 

--Sales Return  (Trade Invoice Sales Return  + Retail Invoice Sales Return )
--Trade Invoice Sales Return  
(ISNULL((SELECT SUM(Quantity) FROM InvoiceDetail, InvoiceAbstract, Items, Manufacturer     
WHERE InvoiceAbstract.InvoiceDate BETWEEN @FROMDATE AND @TODATE
AND (InvoiceAbstract.InvoiceType = 4)               
AND (InvoiceAbstract.Status & 128) = 0               
AND (InvoiceAbstract.Status & 32) = 0              
AND InvoiceAbstract.InvoiceID = InvoiceDetail.InvoiceID               
AND InvoiceDetail.Product_Code = Items.Product_Code     
And Items.Product_Code = I.Product_Code
And Items.CategoryID = itc.CategoryID    
And InvoiceAbstract.CustomerID in (Select CustomerID from #tmpCustomerIDs)
AND Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)  
AND Items.ManufacturerID=Manufacturer.ManufacturerID),0) + 
--Retail Invoice Sales Return  
ISNULL((SELECT SUM(Case When Quantity<0 Then Abs(Quantity) Else 0 End) 
FROM InvoiceDetail, InvoiceAbstract, Items, Manufacturer     
WHERE InvoiceAbstract.InvoiceDate BETWEEN @FROMDATE AND @TODATE
AND (InvoiceAbstract.InvoiceType = 2)               
AND (InvoiceAbstract.Status & 128) = 0               
AND InvoiceAbstract.InvoiceID = InvoiceDetail.InvoiceID     
AND InvoiceDetail.Product_Code = Items.Product_Code     
And Items.Product_Code = I.Product_Code
And Items.CategoryID = itc.CategoryID     
And InvoiceAbstract.CustomerID in (Select CustomerID from #tmpCustomerIDs)
AND Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)  
AND Items.ManufacturerID=Manufacturer.ManufacturerID),0)),
    
"Cl. SOH" =     
CASE 
When (@TODATE < @NEXT_DATE) THEN     
	ISNULL((Select Sum(IsNull(Opening_Quantity, 0)) 
  FROM OpeningDetails, Items, Manufacturer      
	WHERE Manufacturer.Manufacturer_Name in 
  (Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)
	And Items.ManufacturerID=Manufacturer.ManufacturerID 
  And OpeningDetails.Product_Code = Items.Product_Code 
  And Items.Product_Code = I.Product_Code
  And Items.CategoryID = itc.CategoryID 
  AND Opening_Date = DATEADD(dd, 1, @CORRECTED_DATE)), 0) -  
	
	ISNULL((Select Sum(IsNull(Damage_Opening_Quantity, 0)) 
  FROM OpeningDetails, Items, Manufacturer      
	WHERE Manufacturer.Manufacturer_Name in 
  (Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)  
	And Items.ManufacturerID=Manufacturer.ManufacturerID 
  And OpeningDetails.Product_Code = Items.Product_Code 
  And Items.Product_Code = I.Product_Code
  And Items.CategoryID = itc.CategoryID 
  AND Opening_Date = DATEADD(dd, 1, @CORRECTED_DATE)), 0)
	
Else    
	ISNULL((SELECT SUM(Quantity) FROM Batch_Products, Items, Manufacturer      
	WHERE Manufacturer.Manufacturer_Name in 
  (Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)
	And Items.ManufacturerID=Manufacturer.ManufacturerID 
  And Batch_Products.Product_Code = Items.Product_Code 
  And Items.Product_Code = I.Product_Code
  And Items.CategoryID = itc.CategoryID And IsNull(Damage,0)=0), 0) +
	
	(SELECT ISNULL(SUM(Pending), 0) 
  FROM VanStatementDetail, VanStatementAbstract, Items, Manufacturer      
	WHERE Manufacturer.Manufacturer_Name in 
  (Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)  
	And Items.ManufacturerID=Manufacturer.ManufacturerID 
  And VanStatementAbstract.DocSerial = VanStatementDetail.DocSerial     
	AND (VanStatementAbstract.Status & 128) = 0 
  And VanStatementDetail.Product_Code = Items.Product_Code 
  And Items.Product_Code = I.Product_Code
  And Items.CategoryID = itc.CategoryID 
  And VanStatementDetail.PurchasePrice <> 0)   +  
	
	(SELECT ISNULL(SUM(Pending), 0) 
  FROM VanStatementDetail, VanStatementAbstract, Items, Manufacturer      
	WHERE Manufacturer.Manufacturer_Name in 
  (Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)  
	And Items.ManufacturerID=Manufacturer.ManufacturerID 
  And VanStatementAbstract.DocSerial = VanStatementDetail.DocSerial               
	AND (VanStatementAbstract.Status & 128) = 0 
  And VanStatementDetail.Product_Code = Items.Product_Code 
  And Items.Product_Code = I.Product_Code
  And	Items.CategoryID = itc.CategoryID 
  And VanStatementDetail.PurchasePrice = 0)    
End  

,"MTD_Sales" = 
--Sales
ISNULL((SELECT SUM(Case When Quantity>0 Then Quantity Else 0 End) 
FROM InvoiceDetail, InvoiceAbstract, Items, Manufacturer
WHERE InvoiceAbstract.InvoiceDate BETWEEN @CummulativeDATE AND @TODATE
AND (InvoiceAbstract.Status & 128) = 0 AND (InvoiceAbstract.InvoiceType = 2) 
AND InvoiceAbstract.InvoiceID = InvoiceDetail.InvoiceID               
AND InvoiceDetail.Product_Code = Items.Product_Code 
And Items.Product_Code = I.Product_Code
AND Items.CategoryID = itc.CategoryID     
AND Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)
AND Items.ManufacturerID=Manufacturer.ManufacturerID),0) + 

ISNULL((SELECT SUM(Quantity)               
FROM DispatchDetail, DispatchAbstract, Items, Manufacturer      
WHERE DispatchAbstract.DispatchDate BETWEEN @CummulativeDATE AND @TODATE 
AND Isnull(DispatchAbstract.Status, 0) & 64 = 0            
AND Isnull(DispatchAbstract.Status, 0) & 384 <> 384 
AND DispatchAbstract.DispatchID = DispatchDetail.DispatchID                
AND DispatchDetail.Product_Code = Items.Product_Code     
And Items.Product_Code = I.Product_Code
And Items.CategoryID = itc.CategoryID    
AND Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)
AND Items.ManufacturerID=Manufacturer.ManufacturerID),0) - 

--Sales Return  (Trade Invoice Sales Return  + Retail Invoice Sales Return )
--Trade Invoice Sales Return  
(ISNULL((SELECT SUM(Quantity) FROM InvoiceDetail, InvoiceAbstract, Items, Manufacturer     
WHERE InvoiceAbstract.InvoiceDate BETWEEN @CummulativeDATE AND @TODATE
AND (InvoiceAbstract.InvoiceType = 4)               
AND (InvoiceAbstract.Status & 128) = 0               
AND (InvoiceAbstract.Status & 32) = 0              
AND InvoiceAbstract.InvoiceID = InvoiceDetail.InvoiceID               
AND InvoiceDetail.Product_Code = Items.Product_Code     
And Items.Product_Code = I.Product_Code
And Items.CategoryID = itc.CategoryID    
AND Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)  
AND Items.ManufacturerID=Manufacturer.ManufacturerID),0) + 
--Retail Invoice Sales Return  
ISNULL((SELECT SUM(Case When Quantity<0 Then Abs(Quantity) Else 0 End) 
FROM InvoiceDetail, InvoiceAbstract, Items, Manufacturer     
WHERE InvoiceAbstract.InvoiceDate BETWEEN @CummulativeDATE AND @TODATE
AND (InvoiceAbstract.InvoiceType = 2)               
AND (InvoiceAbstract.Status & 128) = 0               
AND InvoiceAbstract.InvoiceID = InvoiceDetail.InvoiceID     
AND InvoiceDetail.Product_Code = Items.Product_Code     
And Items.Product_Code = I.Product_Code
And Items.CategoryID = itc.CategoryID     
AND Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)  
AND Items.ManufacturerID=Manufacturer.ManufacturerID),0))
,'SKU',I.Active,I.ProductName, ITC.Category_Name,
"GodownDandD" =
ISNULL((SELECT SUM(Quantity) 
FROM StockAdjustmentAbstract, StockAdjustment, Items, Manufacturer
WHERE StockAdjustmentAbstract.AdjustmentDate BETWEEN @FROMDATE AND @TODATE
AND (StockAdjustmentAbstract.AdjustmentType = 0)               
AND StockAdjustmentAbstract.AdjustmentID = StockAdjustment.SerialNo  
AND StockAdjustment.Product_Code = Items.Product_Code     
And Items.Product_Code = I.Product_Code
And Items.CategoryID = itc.CategoryID    
AND Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)  
AND Items.ManufacturerID=Manufacturer.ManufacturerID),0)
From ItemCategories itc , Items I
Where itc.CategoryID In (Select CategoryID From #tempCategory1)
And I.CategoryID = ITC.CategoryID


Declare @SumQuery as nVarchar(4000)
Set @SumQuery = ''

--Add TransferOut Column dynamically
Insert InTo #TempTROUT
Select 
"CategoryID" = itc.CategoryID,
"WD Code" = @WDCode,
"WD Dest" = @WDCode,
"CategoryName" = Items.Product_Code,
"BrchID" = 'TROUT - ' + WareHouse.ForumID,
"Quantity" = Sum(stod.Quantity) 
From StockTransferOutAbstract stoa, StockTransferOutDetail stod, ItemCategories itc,
Items, WareHouse, Manufacturer 
Where Manufacturer.Manufacturer_Name in 
(Select Mfr COLLATE SQL_Latin1_General_CP1_CI_AS From #TmpMfr)
And Items.ManufacturerID=Manufacturer.ManufacturerID 
And stoa.WareHouseID = WareHouse.WareHouseID 
And stoa.DocSerial = stod.DocSerial 
And stod.Product_Code = Items.Product_Code 
And Items.CategoryID = itc.CategoryID 
And stoa.DocumentDate Between @FromDate And @ToDate 
And stoa.Status & 192 = 0 
And itc.CategoryID In (Select CategoryID From #tempCategory1)
Group By 
itc.CategoryID, dbo.fn_NLevelCategory(itc.CategoryID, @LevelID), 
WareHouse.ForumID, Items.Product_Code


Set @Inc = 1    
Select @Count = Count(*) From #TempTROUT  
    
While @Inc <= @Count     
Begin    
	Select @CategoryID = CategoryID,@CategoryName = CategoryName, 
         @BrchID = BrchID, @Quantity = Quantity From #TempTROUT
	Where IDS = @Inc    
	If IsNull((Select Count(*) From #TempTROUT Where BrchID = @BrchID and ids < @Inc), 0) < 1    
	Begin    
		If Not Exists (Select * From #TempExistColumn Where ColumnName='['+@BrchID+']')
		Begin
			SET @Query = 'ALTER TABLE #TempConsolidate Add [' + @BrchID +  '] Decimal(18, 6)'    
			Set @SumQuery = @SumQuery + 'Isnull([' + @BrchID +  '],0) + '
			EXEC sp_executesql @Query    
			Insert Into #TempExistColumn (ColumnName) Values ('['+@BrchID+']') 
		End
	End
	Set @Query = 'Update #TempConsolidate Set [' + @BrchID + '] = ' + Cast(@Quantity As nVarchar) + ' Where MarketSKU= ''' + Cast(@CategoryName As nVarchar) + ''''
	EXEC sp_executesql @Query
	Set @Inc = @Inc + 1
End

--To Add received dynamic column into select statement
Declare @Col NVarchar(255)
Declare DColumn Cursor For Select * From #TempExistColumn
Open DColumn
Fetch next from DColumn Into @Col
while @@Fetch_Status=0
Begin
	Set @ConDynCol=@ConDynCol+',"'+Replace(Replace(@Col,'[',''),']','')+'"=Sum('+@Col+')'
	Fetch next from DColumn Into @Col
End
Close DColumn
Deallocate DColumn
Drop Table #TempCategory1    



Declare @Col1 NVarchar(255)
Declare @ConDynCol1 Nvarchar(2000)
Set @ConDynCol1= ''
Declare DColumn1 Cursor For Select * From #TempExistColumn
Open DColumn1
Fetch next from DColumn1 Into @Col1
while @@Fetch_Status=0
Begin
	Set @ConDynCol1= @ConDynCol1 + 'Sum('+@Col1+') <> 0 Or ' 
	Fetch next from DColumn1 Into @Col1
End
Close DColumn1
Deallocate DColumn1

if @ConDynCol1 <> ''
Set @ConDynCol1 = Left(@ConDynCol1,len(@ConDynCol1) - 3)

EndProc:


If @ConDynCol1 ='' 
	Set @SqlQuery=
	'Select WDCode, WDCode, WDDest, FromDate, ToDate, MarketSKU, "Opl. SOH"=Sum([Opl. SOH]),
	"Receipts + TRIN"=Sum([Receipts + TRIN]), 
	"PurchaseITC" = Sum([PurchaseITC]), "TransferIN" = sum([TransferIN]), "TransferOut" = sum([TransferOut]),
	"Sales"=Sum(Sales), "DandD"=Sum([D&D]),
	"NetAdj." = sum([NetAdj.]),  "NetSale(WD_Channel)" = Sum([NetSale(WD_Channel)]), 
	"Cl. SOH"=Sum([Cl. SOH]), "MTD_Sales" = sum([MTD_Sales]),
	"SKU" = [SKU], "Active" = [Active],
	"SystemSKUName" = [SystemSKUName],"MarketSKUName" = [MarketSKUName],"GodownDandD" = [GodownDandD]'+ @ConDynCol 
	+ ' From #TempConsolidate Group By WDCode, WDDest, FromDate, ToDate, MarketSKU, [SKU], [Active], [SystemSKUName], [MarketSKUName],[GodownDandD] 
	Having ((Sum([Opl. SOH]) <> 0 Or  Sum([Receipts + TRIN]) <> 0  Or  Sum([PurchaseITC]) <> 0 Or Sum([TransferIN]) <> 0
	Or Sum([Sales]) <> 0 Or Sum([D&D]) <> 0 
	Or Sum([NetAdj.]) <> 0 Or Sum([NetSale(WD_Channel)]) <> 0 
	Or Sum([Cl. SOH]) <> 0 Or sum([MTD_Sales]) <> 0 Or sum([TransferOut]) <> 0 or sum([GodownDandD])<>0 ) 
	And [Active] = 0) or ([Active] = 1) Order By MarketSKU'

Else
	Set @SqlQuery=
	'Select WDCode, WDCode, WDDest, FromDate, ToDate, MarketSKU, "Opl. SOH"=Sum([Opl. SOH]),
	"Receipts + TRIN"=Sum([Receipts + TRIN]),
	"PurchaseITC" = Sum([PurchaseITC]), "TransferIN" = sum([TransferIN]), "TransferOut" = sum([TransferOut]),
	"Sales"=Sum(Sales),"DandD"=Sum([D&D]),
	"NetAdj." = sum([NetAdj.]),  "NetSale(WD_Channel)" = Sum([NetSale(WD_Channel)]), 
	"Cl. SOH"=Sum([Cl. SOH]), "MTD_Sales" = sum([MTD_Sales]),
	"SKU" = [SKU],"Active" = [Active],
	"SystemSKUName" = [SystemSKUName],"MarketSKUName" = [MarketSKUName],"GodownDandD" = [GodownDandD]'+ @ConDynCol 
	+ ' From #TempConsolidate Group By WDCode, WDDest, FromDate, ToDate, MarketSKU, [SKU], [Active], [SystemSKUName], [MarketSKUName],[GodownDandD] 
	Having ((Sum([Opl. SOH]) <> 0 Or  Sum([Receipts + TRIN]) <> 0 Or  Sum([PurchaseITC]) <> 0 Or Sum([TransferIN]) <> 0 
	Or Sum([Sales]) <> 0 Or Sum([D&D]) <> 0 Or sum([TransferOut]) <> 0 
	Or Sum([NetAdj.]) <> 0 Or Sum([NetSale(WD_Channel)]) <> 0 
	Or Sum([Cl. SOH]) <> 0 or sum([GodownDandD])<>0 or '+ @ConDynCol1+ ') 
	And [Active] = 0) or ([Active] = 1) Order By MarketSKU'


Set @SumQuery = @SumQuery + ' 0'

If @Count > 0 
  Begin
	exec(N'Update #TempConsolidate Set Transferout = ' + @SumQuery)
  End
Else
  Begin
	exec(N'Update #TempConsolidate Set Transferout = 0')
  End

Exec (@SqlQuery)

Drop Table #TempCategory    
Drop Table #TempConsolidate    
Drop Table #TempTROUT
Drop Table #TempExistColumn
Drop Table #TmpMfr
